진행하면서 몇 가지만 더 챙기면 좋겠습니다:- API 응답 JSON 필드명이 scripts/sync-aa-api-data.js에서 기대하는 구조(예: response.data,
  evaluations.artificial_analysis_intelligence_index)와 동일한지 확인하시고, 필요한 경우 parseAAApiData 쪽에서 안전하
  게 매핑하세요.
  - 캐시 정책도 잊지 마세요. API 호출이 성공해 새 데이터를 받으면 aa:model:*, aa:all:models 같은 Redis 키뿐 아니라
  UnifiedModelService.clearCache()도 즉시 비워 주어야 /models 페이지가 바로 최신 데이터를 읽습니다.
  - 마지막으로, 베어러 키가 설정돼 있는지 (artificialanalysis_API_TOKEN) 선확인한 뒤 npm run sync:aa를 돌리면 되고,
  말씀하신 대로 /api/v1/models와 DB에서 claude-sonnet-4-5가 보이면 성공입니다.이 순서대로 구현하시면 “API → 실패 시 Flight 파서”의 이중 안전망까지 갖춘 경로로 복구할 수 있습니다. 준비되셨으 면
  적용 들어가시면됩니다!