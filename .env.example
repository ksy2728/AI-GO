########################################
# AI-GO 환경 변수 템플릿
########################################
# 이 파일을 .env.local로 복사하고 실제 값으로 업데이트하세요
# cp .env.example .env.local

#===========================================
# 🔴 필수 환경 변수 (반드시 설정해야 함)
#===========================================

# [필수] 기본 환경 설정
NODE_ENV="development"  # production으로 변경 (배포시)

# [필수] Artificial Analysis API 키 - 모델 데이터를 가져오는데 필수!
# 획득 방법:
# 1. https://artificialanalysis.ai 가입
# 2. Dashboard → API Keys 메뉴 클릭
# 3. "Create New API Key" 버튼 클릭
# 4. 생성된 키 복사 (aa_로 시작)
artificialanalysis_API_TOKEN="aa_여기에_실제_API_키_입력"

# [필수] 데이터베이스 연결 (하나만 선택)
# Option 1: 로컬 개발용 SQLite (가장 간단)
DATABASE_URL="file:./prisma/dev.db"

# Option 2: Neon PostgreSQL (프로덕션 추천)
# 가입: https://neon.tech → 프로젝트 생성 → Dashboard에서 연결 문자열 복사
# DATABASE_URL="postgresql://user:password@ep-xxx.region.aws.neon.tech/neondb?sslmode=require"

# Option 3: Supabase PostgreSQL
# 가입: https://supabase.com → 프로젝트 생성 → Settings → Database → Connection string
# DATABASE_URL="postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT].supabase.co:5432/postgres"

# Option 4: PlanetScale MySQL
# 가입: https://planetscale.com → 데이터베이스 생성 → Connect → Password 생성
# DATABASE_URL="mysql://username:password@aws.connect.psdb.cloud/database-name?sslaccept=strict"

# [필수] 앱 URL 설정 (로컬 개발용)
NEXT_PUBLIC_API_URL="http://localhost:3000"
NEXT_PUBLIC_APP_URL="http://localhost:3000"
FRONTEND_URL="http://localhost:3000"

# [필수] 프로덕션 URL (Vercel 배포 후 실제 URL로 변경)
# NEXT_PUBLIC_API_URL="https://your-project.vercel.app"
# NEXT_PUBLIC_APP_URL="https://your-project.vercel.app"
# FRONTEND_URL="https://your-project.vercel.app"

#===========================================
# 🟡 권장 환경 변수 (성능과 기능 향상)
#===========================================

# Redis 캐싱 (성능 대폭 향상)
# Upstash 가입: https://upstash.com
# 1. Redis 데이터베이스 생성 (무료)
# 2. Details 탭에서 REST API 정보 확인
# UPSTASH_REDIS_REST_URL="https://your-endpoint.upstash.io"
# UPSTASH_REDIS_REST_TOKEN="your-redis-token"

# AI 제공자 API 키 (선택사항 - 추가 모델 정보 동기화)
# OpenAI: https://platform.openai.com/api-keys
# OPENAI_API_KEY="sk-..."

# Anthropic: https://console.anthropic.com/settings/keys
# ANTHROPIC_API_KEY="sk-ant-..."

# Google AI: https://makersuite.google.com/app/apikey
# GOOGLE_AI_API_KEY="AI..."

#===========================================
# 🟢 선택 환경 변수 (필요시 설정)
#===========================================

# Artificial Analysis 고급 설정
# 성능 필터 활성화 (평균 이하 지능 점수 모델 필터링)
AA_ENABLE_PERFORMANCE_FILTER="true"

# 최소 지능 임계값 (설정하지 않으면 동적 평균 사용)
# AA_MIN_INTELLIGENCE="40"

# 인증 설정 (사용자 로그인 기능 사용시)
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="generate-32-char-random-string-here"
JWT_SECRET="another-32-char-random-string-here"

# 기능 플래그
ENABLE_NEWS_SECTION="true"
ENABLE_BENCHMARKS="true"
ENABLE_AI_CHAT="false"
ENABLE_DARK_MODE="true"
ENABLE_ANALYTICS="false"

# WebSocket 설정 (실시간 업데이트)
NEXT_PUBLIC_DISABLE_WEBSOCKET="true"  # Vercel에서는 true로 설정
ENABLE_WEBSOCKET="false"  # Vercel 서버리스 환경에서는 false

# 자동 동기화 설정
AUTO_SYNC="true"
SYNC_INTERVAL_MINUTES="60"

# API 요청 제한
API_RATE_LIMIT_PER_MINUTE="100"
RATE_LIMIT_PER_MINUTE="100"

# 모니터링 (선택사항)
# Sentry: https://sentry.io
# SENTRY_DSN="https://[your-key]@sentry.io/[project-id]"
# SENTRY_ENVIRONMENT="production"

# Google Analytics: https://analytics.google.com
# NEXT_PUBLIC_GA_MEASUREMENT_ID="G-XXXXXXXXXX"

# 이메일 설정 (알림 기능 사용시)
# SendGrid: https://sendgrid.com
# SMTP_HOST="smtp.sendgrid.net"
# SMTP_PORT="587"
# SMTP_USER="apikey"
# SMTP_PASSWORD="your-sendgrid-api-key"
# SMTP_FROM="noreply@your-domain.com"

# CDN 설정 (선택사항)
# CDN_URL="https://cdn.your-domain.com"

# 지역 설정
PRIMARY_REGION="us-east"
AVAILABLE_REGIONS="us-east,us-west,eu-west,asia-east"

# 개발 도구
NEXT_TELEMETRY_DISABLED="1"
ANALYZE="false"

#===========================================
# 📝 설정 방법 요약
#===========================================
# 1. 이 파일을 .env.local로 복사
#    cp .env.example .env.local
#
# 2. 필수 값 입력
#    - artificialanalysis_API_TOKEN (필수!)
#    - DATABASE_URL (하나 선택)
#
# 3. 설정 검증
#    node scripts/setup-new-deployment.js
#
# 4. 로컬 테스트
#    npm run dev
#
# 5. Vercel 배포시
#    - Vercel Dashboard에서 환경 변수 설정
#    - 또는 vercel env add 명령 사용
#
# 자세한 내용은 docs/DEPLOYMENT_GUIDE.md 참조